//
// Created by mrindeciso on 5/24/22.
//

#ifndef BIGINT_BIGINT_CONST_H
#define BIGINT_BIGINT_CONST_H

#include "bigint.h"

#if 1
const bigint_base_t and_bitmask[] = {
        0b1111111111111111111111111111111111111111111111111111111111111110,
        0b1111111111111111111111111111111111111111111111111111111111111101,
        0b1111111111111111111111111111111111111111111111111111111111111011,
        0b1111111111111111111111111111111111111111111111111111111111110111,
        0b1111111111111111111111111111111111111111111111111111111111101111,
        0b1111111111111111111111111111111111111111111111111111111111011111,
        0b1111111111111111111111111111111111111111111111111111111110111111,
        0b1111111111111111111111111111111111111111111111111111111101111111,
        0b1111111111111111111111111111111111111111111111111111111011111111,
        0b1111111111111111111111111111111111111111111111111111110111111111,
        0b1111111111111111111111111111111111111111111111111111101111111111,
        0b1111111111111111111111111111111111111111111111111111011111111111,
        0b1111111111111111111111111111111111111111111111111110111111111111,
        0b1111111111111111111111111111111111111111111111111101111111111111,
        0b1111111111111111111111111111111111111111111111111011111111111111,
        0b1111111111111111111111111111111111111111111111110111111111111111,
        0b1111111111111111111111111111111111111111111111101111111111111111,
        0b1111111111111111111111111111111111111111111111011111111111111111,
        0b1111111111111111111111111111111111111111111110111111111111111111,
        0b1111111111111111111111111111111111111111111101111111111111111111,
        0b1111111111111111111111111111111111111111111011111111111111111111,
        0b1111111111111111111111111111111111111111110111111111111111111111,
        0b1111111111111111111111111111111111111111101111111111111111111111,
        0b1111111111111111111111111111111111111111011111111111111111111111,
        0b1111111111111111111111111111111111111110111111111111111111111111,
        0b1111111111111111111111111111111111111101111111111111111111111111,
        0b1111111111111111111111111111111111111011111111111111111111111111,
        0b1111111111111111111111111111111111110111111111111111111111111111,
        0b1111111111111111111111111111111111101111111111111111111111111111,
        0b1111111111111111111111111111111111011111111111111111111111111111,
        0b1111111111111111111111111111111110111111111111111111111111111111,
        0b1111111111111111111111111111111101111111111111111111111111111111,
        0b1111111111111111111111111111111011111111111111111111111111111111,
        0b1111111111111111111111111111110111111111111111111111111111111111,
        0b1111111111111111111111111111101111111111111111111111111111111111,
        0b1111111111111111111111111111011111111111111111111111111111111111,
        0b1111111111111111111111111110111111111111111111111111111111111111,
        0b1111111111111111111111111101111111111111111111111111111111111111,
        0b1111111111111111111111111011111111111111111111111111111111111111,
        0b1111111111111111111111110111111111111111111111111111111111111111,
        0b1111111111111111111111101111111111111111111111111111111111111111,
        0b1111111111111111111111011111111111111111111111111111111111111111,
        0b1111111111111111111110111111111111111111111111111111111111111111,
        0b1111111111111111111101111111111111111111111111111111111111111111,
        0b1111111111111111111011111111111111111111111111111111111111111111,
        0b1111111111111111110111111111111111111111111111111111111111111111,
        0b1111111111111111101111111111111111111111111111111111111111111111,
        0b1111111111111111011111111111111111111111111111111111111111111111,
        0b1111111111111110111111111111111111111111111111111111111111111111,
        0b1111111111111101111111111111111111111111111111111111111111111111,
        0b1111111111111011111111111111111111111111111111111111111111111111,
        0b1111111111110111111111111111111111111111111111111111111111111111,
        0b1111111111101111111111111111111111111111111111111111111111111111,
        0b1111111111011111111111111111111111111111111111111111111111111111,
        0b1111111110111111111111111111111111111111111111111111111111111111,
        0b1111111101111111111111111111111111111111111111111111111111111111,
        0b1111111011111111111111111111111111111111111111111111111111111111,
        0b1111110111111111111111111111111111111111111111111111111111111111,
        0b1111101111111111111111111111111111111111111111111111111111111111,
        0b1111011111111111111111111111111111111111111111111111111111111111,
        0b1110111111111111111111111111111111111111111111111111111111111111,
        0b1101111111111111111111111111111111111111111111111111111111111111,
        0b1011111111111111111111111111111111111111111111111111111111111111,
        0b0111111111111111111111111111111111111111111111111111111111111111
};
#elif 0
const bigint_base_t and_bitmask[] = {
        0b11111111111111111111111111111110,
        0b11111111111111111111111111111101,
        0b11111111111111111111111111111011,
        0b11111111111111111111111111110111,
        0b11111111111111111111111111101111,
        0b11111111111111111111111111011111,
        0b11111111111111111111111110111111,
        0b11111111111111111111111101111111,
        0b11111111111111111111111011111111,
        0b11111111111111111111110111111111,
        0b11111111111111111111101111111111,
        0b11111111111111111111011111111111,
        0b11111111111111111110111111111111,
        0b11111111111111111101111111111111,
        0b11111111111111111011111111111111,
        0b11111111111111110111111111111111,
        0b11111111111111101111111111111111,
        0b11111111111111011111111111111111,
        0b11111111111110111111111111111111,
        0b11111111111101111111111111111111,
        0b11111111111011111111111111111111,
        0b11111111110111111111111111111111,
        0b11111111101111111111111111111111,
        0b11111111011111111111111111111111,
        0b11111110111111111111111111111111,
        0b11111101111111111111111111111111,
        0b11111011111111111111111111111111,
        0b11110111111111111111111111111111,
        0b11101111111111111111111111111111,
        0b11011111111111111111111111111111,
        0b10111111111111111111111111111111,
        0b01111111111111111111111111111111
};
#elif 0
const bigint_base_t and_bitmask[] = {
        0b1111111111111110,
        0b1111111111111101,
        0b1111111111111011,
        0b1111111111110111,
        0b1111111111101111,
        0b1111111111011111,
        0b1111111110111111,
        0b1111111101111111,
        0b1111111011111111,
        0b1111110111111111,
        0b1111101111111111,
        0b1111011111111111,
        0b1110111111111111,
        0b1101111111111111,
        0b1011111111111111,
        0b0111111111111111,
};
#else
const bigint_base_t and_bitmask[] = {
        0b11111110,
        0b11111101,
        0b11111011,
        0b11110111,
        0b11101111,
        0b11011111,
        0b10111111,
        0b01111111
};
#endif

#endif //BIGINT_BIGINT_CONST_H
